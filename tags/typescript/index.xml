<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Typescript on Jeroen Nyckees</title><link>https://jenyckee.github.io/tags/typescript/</link><description>Recent content in Typescript on Jeroen Nyckees</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 01 Feb 2018 17:46:56 +0100</lastBuildDate><atom:link href="https://jenyckee.github.io/tags/typescript/index.xml" rel="self" type="application/rss+xml"/><item><title>TypeScript</title><link>https://jenyckee.github.io/posts/polymorphism-in-typescript/</link><pubDate>Thu, 01 Feb 2018 17:46:56 +0100</pubDate><guid>https://jenyckee.github.io/posts/polymorphism-in-typescript/</guid><description>&lt;h1 id="intention"&gt;Intention&lt;/h1&gt;
&lt;p&gt;The intention of this post is to sum up some thoughts on TypeScript that come from my own experience of working with it.&lt;/p&gt;
&lt;p&gt;As with all engineering the right tool for the job is always dependent on the context of the job. The context where I would consider using TypeScript would be on projects that have a large codebase that will be developed and maintained by a large team of developers that have preliminary JavaScript or TypeScript knowledge. The advantages that come with using TypeScript will in my opinion outweigh the effort that has to spend on set up and the large amounts of boiler plate code that has to be written compared to using JavaScript. When setting up a proof of concept or a rather small project JavaScript will do just fine for my needs.&lt;/p&gt;</description></item></channel></rss>